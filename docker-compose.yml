services:
  redis-server:
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    networks:
      - a2_comp_escalavel_default

  spark-master:
    image: bitnami/spark:3.5.1
    ports:
      - "8080:8080" # Spark Master Web UI
      - "7077:7077" # Spark Master internal communication
    environment:
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - a2_comp_escalavel_default

  # PostgreSQL para Dados Totais
  postgres-data:
    image: postgres:16
    container_name: postgres-data-db
    restart: always
    environment:
      POSTGRES_DB: dados_gerais
      POSTGRES_USER: emap
      POSTGRES_PASSWORD: emap123
    volumes:
      - pgdata_total:/var/lib/postgresql/data
      # Se quiser init para este banco:
      # - ./init_data.sql:/docker-entrypoint-initdb.d/init_data.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - a2_comp_escalavel_default

  # PostgreSQL para Estatísticas
  postgres-stats:
    image: postgres:16
    container_name: postgres-stats-db
    restart: always
    environment:
      POSTGRES_DB: dados_stats
      POSTGRES_USER: emap
      POSTGRES_PASSWORD: emap123
    volumes:
      - pgdata_stats:/var/lib/postgresql/data
      - ./dados_stats_ini.sql:/docker-entrypoint-initdb.d/dados_stats_ini.sql:ro
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - a2_comp_escalavel_default

  # Serviço para gerar dados fixos (executa uma vez e para)
  data-generator:
    build:
      context: .
      dockerfile: Dockerfile.generator
    depends_on:
      postgres-data:
        condition: service_healthy
    environment:
      PG_DATA_HOST: postgres-data
      PG_DATA_PORT: 5432
      PG_DATA_DB: dados_gerais
      PG_DATA_USER: emap
      PG_DATA_PASSWORD: emap123
    networks:
      - a2_comp_escalavel_default
    restart: "no"

  spark-worker:
    image: bitnami/spark:3.5.1
    depends_on:
      - spark-master
      - redis-server
      - postgres-data
      - postgres-stats
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_MODE=worker
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - a2_comp_escalavel_default

  # Serviço para o job Spark
  spark-batch-processor:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      spark-master:
        condition: service_started
      redis-server:
        condition: service_started
      postgres-data:
        condition: service_healthy
      postgres-stats:
        condition: service_healthy
      data-generator:
        condition: service_completed_successfully
    environment:
      SPARK_MASTER_URL: spark://spark-master:7077
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
      MONITOR_INTERVAL_SECONDS: 10
      LIST_THRESHOLDS_JSON: |
        {"raw_hotels": 50, "raw_flights": 50}
      # PostgreSQL Dados Totais
      PG_DATA_HOST: postgres-data
      PG_DATA_PORT: 5432
      PG_DATA_DB: dados_gerais
      PG_DATA_USER: emap
      PG_DATA_PASSWORD: emap123
      # PostgreSQL Estatísticas
      PG_STATS_HOST: postgres-stats
      PG_STATS_PORT: 5432
      PG_STATS_DB: dados_stats
      PG_STATS_USER: emap
      PG_STATS_PASSWORD: emap123
    entrypoint: ["/opt/bitnami/python/bin/python", "main.py"]
    networks:
      - a2_comp_escalavel_default

  # Serviço para o gerador de dados em tempo real
  realtime-data-generator:
   build:
     context: .
     dockerfile: Dockerfile.generator-client
   depends_on:
     redis-server:
       condition: service_started
   environment:
     REDIS_HOST: master.elastic-cache-teste-ce.occ9tt.use1.cache.amazonaws.com
     REDIS_PORT: 6379
   networks:
     - a2_comp_escalavel_default
   restart: "on-failure"

networks:
  a2_comp_escalavel_default:

volumes:
  pgdata_total:
  pgdata_stats:
